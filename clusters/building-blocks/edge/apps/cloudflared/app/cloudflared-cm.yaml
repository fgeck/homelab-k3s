---
# This ConfigMap is just a way to define the cloudflared config.yaml file in k8s.
# It's useful to define it in k8s, rather than as a stand-alone .yaml file, because
# this lets you use various k8s templating solutions (e.g. Helm charts) to
# parameterize your config, instead of just using string literals.
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflared
data:
  config.yaml: |
    # Name of the tunnel you want to run
    tunnel: fgeck.de-homelab-k3s
    metadata:
    headers:
      - name: CF-Connecting-IP
        values:
          - "$http_x_forwarded_for"
    warp-routing:
      enabled: true
    credentials-file: /etc/cloudflared/creds/credentials.json
    # Serves the metrics server under /metrics and the readiness server under /ready
    metrics: 0.0.0.0:2000
    # Autoupdates applied in a k8s pod will be lost when the pod is removed or restarted, so
    # autoupdate doesn't make sense in Kubernetes. However, outside of Kubernetes, we strongly
    # recommend using autoupdate.
    no-autoupdate: true
    # The `ingress` block tells cloudflared which local service to route incoming
    # requests to. For more about ingress rules, see
    # https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/ingress
    #
    # Remember, these rules route traffic from cloudflared to a local service. To route traffic
    # from the internet to cloudflared, run `cloudflared tunnel route dns <tunnel> <hostname>`.
    # E.g. `cloudflared tunnel route dns example-tunnel tunnel.example.com`.
    ingress:
    - hostname: flux-webhook.${DOMAIN_NAME}
      service: http://webhook-receiver.flux-system.svc.cluster.local
    - hostname: vw.${DOMAIN_NAME}
      service: http://vaultwarden.security.svc.cluster.local
    # - hostname: auth.${DOMAIN_NAME}
    #   service: http://authentik-server.security.svc.cluster.local
    - hostname: books.${DOMAIN_NAME}
      service: http://calibre-wa.media.svc.cluster.local
    - hostname: bookmarks.${DOMAIN_NAME}
      service: http://hoarder.default.svc.cluster.local
    - hostname: docs.${DOMAIN_NAME}
      service: http://paperless.default.svc.cluster.local
    - hostname: obsidian.${DOMAIN_NAME}
      service: http://couchdb.default.svc.cluster.local
    # - hostname: hello.${DOMAIN_NAME}
    #   service: hello_world
    # This rule matches any traffic which didn't match a previous rule, and responds with HTTP 404.
    - service: http_status:404
